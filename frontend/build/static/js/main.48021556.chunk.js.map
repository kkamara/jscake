{"version":3,"sources":["constants.ts","components/Loader.tsx","common/styles.ts","common/partials.tsx","components/Modals/ViewModal.tsx","components/Modals/DeleteModal.tsx","components/Modals/EditModal.tsx","components/Modals/CreateModal.tsx","components/HomePage/HomePage.tsx","components/HomePage/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API","Loader","color","loading","override","Fragment","Helmet","CssBaseline","Container","maxWidth","css","size","button","cursor","renderImage","props","src","url","height","useStyles","makeStyles","theme","createStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ViewModal","classes","undefined","data","setEnable","Modal","aria-labelledby","aria-describedby","className","open","enable","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","style","width","imageUrl","id","name","yumFactor","comment","Grid","container","item","xs","styles","onClick","setShowEditModal","fontSize","setShowDeleteModal","DeleteModal","React","useState","deleteResource","setDeleteResource","handleSubmit","a","axios","delete","status","setCollection","prevState","filter","Error","FormControl","component","FormLabel","RadioGroup","aria-label","value","onChange","event","target","FormControlLabel","control","Radio","checked","label","Button","variant","EditModal","uploadingImage","setUploadingImage","newImage","setNewImage","submittingImage","setSubmittingImage","errors","setErrors","useEffect","handleErrors","params","FormData","append","toString","patch","res","newData","setData","newState","key","response","length","push","yumFactorConstraintErr","test","Number","parseInt","map","error","Alert","severity","TextField","type","FormGroup","onSave","files","acceptedFiles","showPreviews","maxFileSize","disabled","initialData","CreateModal","post","resData","image","input","JSON","stringify","handleSaveImage","marginTop","marginBottom","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","index","sort","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","headCell","TableCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","root","table","minWidth","clip","margin","overflow","position","top","HomePage","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","setLoading","rows","setRows","chosenRow","setChosenRow","showViewModal","setShowViewModal","showDeleteModal","showEditModal","showCreateModal","setShowCreateModal","getData","get","emptyRows","Math","min","Paper","TableContainer","Table","TableBody","slice","row","labelId","hover","find","ID","handleClick","role","tabIndex","selected","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","Switch","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48021556.chunk.js","sourcesContent":["\n\nexport const API = `/api/v1/`;\n// export const API = `http://localhost:3000/api/v1/`;\n","import React from \"react\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { Helmet } from 'react-helmet';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\ntype Props = {\n    color?: string;\n    loading?: boolean;\n    override?: string;\n}\n\nconst Loader = ({ \n    color, \n    loading, \n    override \n}: Props) =>\n    <React.Fragment>\n        <Helmet>\n            <title>JS Cake 🎂</title>\n        </Helmet>\n        <CssBaseline />\n        <Container maxWidth='xs'>\n            <BeatLoader \n                color={color || \"#42f5ef\"} \n                loading={loading} \n                css={`left: 100px; position: relative; top: 250px; ${override}`} \n                size={50} \n            />\n        </Container>\n    </React.Fragment>;\n\nexport default Loader;\n","\nexport const button = {\n    cursor: 'pointer',\n};\n","import React from 'react';\n\ntype renderImageProps = {\n  url: string;\n  height?: number;\n};\nexport const renderImage = (props: renderImageProps) => \n  <img src={props.url} height={props.height || 220} />;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { Data } from '../../common/interfaces';\nimport * as styles from '../../common/styles';\nimport * as partials from '../../common/partials';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }),\n);\n\ntype Props = {\n  setShowEditModal: Function;\n  setShowDeleteModal: Function;\n  setEnable: Function;\n  enable: boolean;\n  data: Data|undefined;\n};\n\nexport default function ViewModal(props: Props) {\n  const classes = useStyles();\n\n  if (undefined === props.data) {\n    props.setEnable(false);\n  }\n\n  const handleClose = () => {\n    props.setEnable(false);\n  };\n\n  const handleUpdate = () => {\n    props.setShowEditModal(true);\n  };\n\n  const handleDelete = () => {\n    props.setShowDeleteModal(true);\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.enable}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade \n          in={props.enable}\n          style={{\n            width: 400,\n          }}\n        >\n          <div className={classes.paper}>\n            <partials.renderImage url={(props.data as Data).imageUrl} />\n            <h2 id=\"transition-modal-title\">{(props.data as Data).name}</h2>\n            <ul id=\"transition-modal-description\">\n              <li>{(props.data as Data).yumFactor} rating</li>\n              <li>{(props.data as Data).comment}</li>\n            </ul>\n            <Grid container>\n              <Grid item xs={11}>\n                <Grid container>\n                  <EditIcon\n                    style={styles.button}\n                    onClick={handleUpdate}\n                    fontSize=\"large\"\n                    color='action'\n                  />      \n                </Grid>\n              </Grid>\n              <Grid item xs={1}>\n                <Grid container>\n                  <DeleteIcon\n                    style={styles.button}\n                    onClick={handleDelete}\n                    fontSize=\"large\"\n                    color='secondary'\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Button from '@material-ui/core/Button';\n\nimport { Data } from '../../common/interfaces';\nimport * as partials from '../../common/partials';\nimport { API } from '../../constants';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }),\n);\n\ntype Props = {\n  setCollection: Function;\n  setEnable: Function;\n  enable: boolean;\n  data: Data|undefined;\n};\n\nexport default function DeleteModal(props: Props) {\n  const classes = useStyles();\n  const [deleteResource, setDeleteResource] = React.useState(false);\n\n  if (undefined === props.data) {\n    props.setEnable(false);\n  }\n\n  const handleBack = () => {\n    props.setEnable(false);\n  };\n\n  const handleClose = () => {\n    props.setEnable(false);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = (event.target as HTMLInputElement).value;\n    switch(val) {\n        case 'true':\n            setDeleteResource(true);\n            break;\n        case 'false':\n            setDeleteResource(false);\n            break;\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (true === deleteResource) {\n      const res = await axios.delete(`${API}/cake/${(props.data as Data).id}`);\n      if (200 === res.status) {\n        props.setCollection((prevState: any) => {\n          setDeleteResource(false);\n          props.setEnable(false);\n          return prevState\n            .filter(({ id }: Data) => id !== (props.data as Data).id);\n        });\n      } else {\n        throw new Error(\"Something went wrong\");\n      }\n    } else {\n      props.setEnable(false);\n    }\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.enable}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade \n          in={props.enable}\n          style={{\n            width: 400,\n          }}\n        >\n          <div className={classes.paper}>\n            <partials.renderImage url={(props.data as Data).imageUrl} />\n            <h2 id=\"transition-modal-title\">Delete {(props.data as Data).name}</h2>\n            <ul id=\"transition-modal-description\">\n              <li>{(props.data as Data).yumFactor} rating</li>\n              <li>{(props.data as Data).comment}</li>\n            </ul>\n            <Grid container>\n                <form>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">\n                          Are you sure you want to delete this?\n                        </FormLabel>\n                        <RadioGroup \n                          aria-label=\"delete\" \n                          name=\"delete\" \n                          value={deleteResource} \n                          onChange={handleChange}\n                        >\n                            <FormControlLabel \n                              value=\"true\" \n                              control={<Radio checked={deleteResource} />} \n                              label=\"Yes\" \n                            />\n                            <FormControlLabel \n                              value=\"false\" \n                              control={<Radio checked={!deleteResource} />} \n                              label=\"No\" \n                            />\n                        </RadioGroup>\n                        <Grid container>\n                          <Grid item xs={11}>\n                            <Grid container> \n                              <Button \n                                variant=\"contained\" \n                                color=\"default\"\n                                onClick={handleBack}\n                              >\n                                Back\n                              </Button>\n                            </Grid>\n                          </Grid>\n                          <Grid item xs={1}>\n                            <Grid container>\n                              <Button \n                                variant=\"contained\" \n                                color=\"primary\"\n                                onClick={handleSubmit}\n                              >\n                                Submit\n                              </Button>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                    </FormControl>\n                </form>\n            </Grid>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react';\nimport axios from 'axios';\nimport { DropzoneDialog } from 'material-ui-dropzone';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from '@material-ui/lab/Alert';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nimport { Data } from '../../common/interfaces';\nimport * as partials from '../../common/partials';\nimport { API } from '../../constants';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }),\n);\n\ntype Props = {\n  setCollection: Function;\n  setEnable: Function;\n  enable: boolean;\n  setData: Function;\n  data: Data|undefined;\n};\n\nexport default function EditModal(props: Props) {\n  const classes = useStyles();\n  const [uploadingImage, setUploadingImage] = React.useState(false);\n  const [newImage, setNewImage] = React.useState<any>(undefined);\n  const [submittingImage, setSubmittingImage] = React.useState(false);\n  const [errors, setErrors] = React.useState<string[]>([]);\n\n  if (undefined === props.data) {\n    props.setEnable(false);\n  }\n\n  const handleBack = () => {\n    props.setEnable(false);\n  };\n\n  const handleClose = () => {\n    props.setEnable(false);\n  };\n\n  React.useEffect(() => {\n    handleErrors();\n  }, [props.data]);\n\n  const handleUploadingImageChoice = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = (event.target as HTMLInputElement).value;\n    switch(val) {\n        case 'true':\n            setSubmittingImage(true);\n            setUploadingImage(true);\n            break;\n        case 'false':\n            setNewImage(false);\n            setUploadingImage(false);\n            setSubmittingImage(false);\n            break;\n    }\n  };\n\n  const handleSubmit = async () => {\n    const data = (props.data as Data);\n    const params = new FormData();\n    if (undefined !== newImage) {\n      params.append('image', newImage);\n    }\n    params.append('name', data.name);\n    params.append('yumFactor', data.yumFactor.toString());\n    params.append('comment', data.comment);\n\n    try {\n      const res = await axios.patch(`${API}cake/${data.id}`, params);\n      const { data: newData } = res.data;\n      setNewImage(false);\n      props.setEnable(false);\n\n      props.setData(newData);\n\n      props.setCollection((prevState: any) => {\n        const newState: Data[] = [ ...prevState ];\n        for (const key in newState) {\n          const { id } = newState[key];\n          if (id === data.id) {\n            newState[key] = newData;\n          }\n        }\n\n        return newState;\n      });\n    } catch (err) {\n        setErrors(err.response.data.errors);\n    }\n  };\n\n  const handleErrors = () => {\n    const errors: string[] = [];\n    const data = (props.data as Data);\n\n    if (3 > data.name.length) {\n      errors.push(\"The name field must be at least 3 characters.\");\n    } else if (30 < data.name.length) {\n      errors.push(\"The name field must not exceed 30 characters.\");\n    }\n\n    if (3 > data.comment.length) {\n      errors.push(\"The comment field must be at least 3 characters.\");\n    } else if (50 < data.comment.length) {\n      errors.push(\"The comment field must not exceed 30 characters.\");\n    }\n\n    const yumFactorConstraintErr = \"The yumFactor field must be between 1 - 5 inclusive.\";\n    if (false === /^\\d+$/.test(data.yumFactor.toString())) {\n        errors.push(\"The yumFactor field must be an integer type.\");\n    } else if (1 > data.yumFactor) {\n        errors.push(yumFactorConstraintErr);\n    } else if (5 < data.yumFactor) {\n        errors.push(yumFactorConstraintErr);\n    }\n\n    setErrors(prevState => [ ...errors ]);\n  };\n \n  const onChange = (event: any) => {\n    const { name, value } = (event.target as HTMLInputElement);\n    props.setData((prevState: any) => {\n      if ('yumFactor' === name) {\n        return {\n          ...prevState,\n          [name]: Number.parseInt(value),\n        };\n      }\n      return {\n        ...prevState,\n        [name]: value,\n      };\n    });\n  };\n \n  const handleSaveImage = (files: File[]) => {\n    setNewImage(files[0]);\n    setSubmittingImage(false);\n  };\n \n  const cancelSaveImage = () => {\n    setSubmittingImage(false);\n    setNewImage(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.enable}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade \n          in={props.enable}\n          style={{\n            width: 400,\n          }}\n        >\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Edit {(props.data as Data).name}</h2>\n            <Grid container>\n                <form>\n                    <FormControl component=\"fieldset\">\n                        {\n                          errors.length \n                            ? errors.map((error: string, key: number) => (\n                                <Alert key={key} severity=\"error\">\n                                  {error}\n                                </Alert> \n                              ))\n                            : null\n                        }\n                        \n                        <TextField \n                          id=\"standard-required\" \n                          name=\"name\"\n                          value={(props.data as Data).name}\n                          onChange={onChange}\n                          style={{\n                            width: 335,\n                          }}\n                        />\n                        <TextField \n                          id=\"standard-required\" \n                          name=\"yumFactor\"\n                          type=\"number\"\n                          value={(props.data as Data).yumFactor}\n                          onChange={onChange}\n                        />\n                        <TextField \n                          id=\"standard-required\" \n                          name=\"comment\"\n                          value={(props.data as Data).comment}\n                          onChange={onChange}\n                        />\n                        <br />\n                        <FormGroup>\n                          <FormLabel component=\"legend\">\n                            Upload new image?\n                          </FormLabel>\n                          <RadioGroup \n                            aria-label=\"uploading image\" \n                            name=\"uploadingImage\" \n                            value={uploadingImage} \n                            onChange={handleUploadingImageChoice}\n                          >\n                              <FormControlLabel \n                                value=\"true\" \n                                control={<Radio checked={uploadingImage} />} \n                                label=\"Yes\" \n                              />\n                              <FormControlLabel \n                                value=\"false\" \n                                control={<Radio checked={!uploadingImage} />} \n                                label=\"No\" \n                              />\n                          </RadioGroup>\n                        </FormGroup>\n                        {\n                          uploadingImage ? (\n                            <>\n                              <DropzoneDialog\n                                  open={submittingImage}\n                                  onSave={handleSaveImage}\n                                  acceptedFiles={['image/jpeg', 'image/png']}\n                                  showPreviews={true}\n                                  maxFileSize={5000000}\n                                  onClose={cancelSaveImage}\n                              />\n                            </>\n                          ) : null\n                        }\n                        <br />\n                        <Grid container>\n                          <Grid item xs={10}>\n                            <Grid container> \n                              <Button \n                                variant=\"contained\" \n                                color=\"default\"\n                                onClick={handleBack}\n                              >\n                                Back\n                              </Button>\n                            </Grid>\n                          </Grid>\n                          <Grid item xs={2}>\n                            <Grid container>\n                              <Button \n                                variant=\"contained\" \n                                color=\"primary\"\n                                onClick={handleSubmit}\n                                disabled={0 < errors.length}\n                              >\n                                Submit\n                              </Button>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                    </FormControl>\n                </form>\n            </Grid>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react';\nimport axios from 'axios';\nimport { DropzoneDialog } from 'material-ui-dropzone';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { Data } from '../../common/interfaces';\nimport { API } from '../../constants';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }),\n);\n\ntype Props = {\n  setCollection: Function;\n  setEnable: Function;\n  enable: boolean;\n};\n\nconst initialData = {\n  name: '',\n  comment: '',\n  yumFactor: 1,\n  imageUrl: '',\n};\n\nexport default function CreateModal(props: Props) {\n  const classes = useStyles();\n  const [newImage, setNewImage] = React.useState<any>(undefined);\n  const [submittingImage, setSubmittingImage] = React.useState(false);\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const [data, setData] = React.useState<{\n    id?: number;\n    name: string;\n    comment: string;\n    imageUrl: string;\n    yumFactor: number;\n  }>(initialData);\n\n  const handleBack = () => {\n    props.setEnable(false);\n  };\n\n  const handleClose = () => {\n    props.setEnable(false);\n  };\n\n  React.useEffect(() => {\n    handleErrors();\n  }, [data]);\n\n  const handleSubmit = async () => {\n    const newData = (data as Data);\n    const params = new FormData();\n    params.append('image', newImage);\n    params.append('name', newData.name);\n    params.append('yumFactor', newData.yumFactor.toString());\n    params.append('comment', newData.comment);\n\n    try {\n      const res = await axios.post(`${API}cake/create`, params);\n      const { data: resData } = res.data;\n      setNewImage(false);\n      props.setEnable(false);\n\n      props.setCollection((prevState: any) => \n        [ resData, ...prevState ]);\n    } catch (err) {\n        setErrors(err.response.data.errors);\n    }\n  };\n\n  const handleErrors = (image?: File) => {\n    const errors: string[] = [];\n    const input = (data as Data);\n\n    if (\n      JSON.stringify(data) === JSON.stringify(initialData)\n      && undefined === newImage\n    ) {\n      return setErrors([]);\n    }\n    \n    if (undefined === image && undefined === newImage) {\n      errors.push(\"Missing image field\");\n    }\n\n    if (!input.name) {\n      errors.push(\"Missing name field.\");\n    } else if (3 > input.name.length) {\n      errors.push(\"The name field must be at least 3 characters.\");\n    } else if (30 < input.name.length) {\n      errors.push(\"The name field must not exceed 30 characters.\");\n    }\n\n    if (!input.comment) {\n      errors.push(\"Missing comment field.\");\n    } else if (3 > input.comment.length) {\n      errors.push(\"The comment field must be at least 3 characters.\");\n    } else if (50 < input.comment.length) {\n      errors.push(\"The comment field must not exceed 30 characters.\");\n    }\n\n    const yumFactorConstraintErr = \"The yumFactor field must be between 1 - 5 inclusive.\";\n    if (!input.yumFactor) {\n      errors.push(\"Missing yumFactor field.\");\n    } else if (false === /^\\d+$/.test(input.yumFactor.toString())) {\n        errors.push(\"The yumFactor field must be an integer type.\");\n    } else if (1 > input.yumFactor) {\n        errors.push(yumFactorConstraintErr);\n    } else if (5 < input.yumFactor) {\n        errors.push(yumFactorConstraintErr);\n    }\n\n    setErrors(prevState => [ ...errors ]);\n  };\n \n  const onChange = (event: any) => {\n    const { name, value } = (event.target as HTMLInputElement);\n    setData((prevState: any) => {\n      if ('yumFactor' === name) {\n        return {\n          ...prevState,\n          [name]: Number.parseInt(value),\n        };\n      }\n      return {\n        ...prevState,\n        [name]: value,\n      };\n    });\n  };\n\n  const handleSaveImage = async (files: File[]) => {\n    setNewImage(files[0]);\n    setSubmittingImage(false);\n    handleErrors(files[0]);\n  };\n\n  const cancelSaveImage = () => {\n    setSubmittingImage(false);\n    setNewImage(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.enable}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade \n          in={props.enable}\n          style={{\n            width: 400,\n          }}\n        >\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Add Cake</h2>\n            <Grid container>\n                <form>\n                    <FormControl component=\"fieldset\">\n                        {\n                          errors.length \n                            ? errors.map((error: string, key: number) => (\n                                <Alert key={key} severity=\"error\">\n                                  {error}\n                                </Alert> \n                              ))\n                            : null\n                        }\n                        \n                        <TextField \n                          id=\"standard-required\" \n                          label=\"Name\"\n                          name=\"name\"\n                          value={(data as Data).name}\n                          onChange={onChange}\n                          style={{\n                            width: 335,\n                          }}\n                        />\n                        <TextField \n                          id=\"standard-required\" \n                          label=\"Yum Factor\"\n                          name=\"yumFactor\"\n                          type=\"number\"\n                          value={(data as Data).yumFactor}\n                          onChange={onChange}\n                        />\n                        <TextField \n                          id=\"standard-required\" \n                          label=\"Comment\"\n                          name=\"comment\"\n                          value={(data as Data).comment}\n                          onChange={onChange}\n                        />\n                        <br />\n                        <Button\n                          variant=\"contained\" \n                          color={undefined !== newImage ? \"primary\" : \"default\"}\n                          onClick={() => setSubmittingImage(true)}\n                          style={{\n                            marginTop: 15,\n                            marginBottom: 15,\n                          }}\n                        >\n                          Upload image\n                        </Button>\n                        <br />\n                        <br />\n                        <DropzoneDialog\n                            open={submittingImage}\n                            onSave={handleSaveImage}\n                            acceptedFiles={['image/jpeg', 'image/png']}\n                            showPreviews={true}\n                            maxFileSize={5000000}\n                            onClose={cancelSaveImage}\n                        />\n                        <br />\n                        <Grid container>\n                          <Grid item xs={10}>\n                            <Grid container> \n                              <Button \n                                variant=\"contained\" \n                                color=\"default\"\n                                onClick={handleBack}\n                              >\n                                Back\n                              </Button>\n                            </Grid>\n                          </Grid>\n                          <Grid item xs={2}>\n                            <Grid container>\n                              <Button \n                                variant=\"contained\" \n                                color=\"primary\"\n                                onClick={handleSubmit}\n                                disabled={0 < errors.length}\n                              >\n                                Submit\n                              </Button>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                    </FormControl>\n                </form>\n            </Grid>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react';\nimport axios from 'axios';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nimport Button from '@material-ui/core/Button';\n\nimport { API } from '../../constants';\nimport Loader from '../Loader';\nimport ViewModal from '../Modals/ViewModal';\nimport DeleteModal from '../Modals/DeleteModal';\nimport EditModal from '../Modals/EditModal';\nimport CreateModal from '../Modals/CreateModal';\nimport { Data } from '../../common/interfaces';\nimport * as partials from '../../common/partials';\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n  disablePadding: boolean;\n  id: keyof Data;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n  { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\n  { id: 'comment', numeric: true, disablePadding: false, label: 'Comment' },\n  { id: 'imageUrl', numeric: false, disablePadding: false, label: 'Photo' },\n  { id: 'yumFactor', numeric: true, disablePadding: false, label: 'Yum Factor' },\n];\n\ninterface EnhancedTableProps {\n  classes: ReturnType<typeof useStyles>;\n  numSelected: number;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n  }),\n);\n\nexport default function HomePage() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Data>('name');\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [loading, setLoading] = React.useState(true);\n  const [rows, setRows] = React.useState<Data[]>([]);\n  const [chosenRow, setChosenRow] = React.useState<Data|undefined>(undefined);\n  const [showViewModal, setShowViewModal] = React.useState(false);\n  const [showDeleteModal, setShowDeleteModal] = React.useState(false);\n  const [showEditModal, setShowEditModal] = React.useState(false);\n  const [showCreateModal, setShowCreateModal] = React.useState(false);\n\n  const getData = async () => {\n      const res = await axios.get(`${API}cake/list`);\n      if (200 === res.status) {\n        setLoading(false);\n        setRows(res.data.data);\n      } else {\n        throw new Error(\"Something went wrong\");\n      }\n  };\n\n  React.useEffect(() => {\n      getData();\n  }, []);\n\n  if (loading === true) {\n    return <Loader />;\n  }\n\n  if (true === showEditModal) {\n    return (\n      <EditModal \n          setData={setChosenRow}\n          setCollection={setRows}\n          setEnable={setShowEditModal}\n          enable={showEditModal}\n          data={chosenRow}\n      />\n    );\n  }\n\n  if (true === showDeleteModal) {\n    return (\n      <DeleteModal \n          setCollection={setRows}\n          setEnable={setShowDeleteModal}\n          enable={showDeleteModal}\n          data={chosenRow}\n      />\n    );\n  }\n\n  if (true === showViewModal) {\n    return (\n      <ViewModal \n          setShowEditModal={setShowEditModal}\n          setShowDeleteModal={setShowDeleteModal}\n          setEnable={setShowViewModal}\n          enable={showViewModal}\n          data={chosenRow}\n      />\n    );\n  }\n\n  if (true === showCreateModal) {\n    return (\n      <CreateModal \n          setCollection={setRows}\n          setEnable={setShowCreateModal}\n          enable={showCreateModal}\n      />\n    );\n  }\n\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Data) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {};\n\n  const handleClick = (event: React.MouseEvent<unknown>, id: number) => {\n    const row = rows.find(({ id: ID }) => id === ID);\n    if (undefined === row) {\n      return;\n    }\n    setChosenRow(row);\n    setShowViewModal(true);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked);\n  };\n\n  const handleCreate = () => {\n    setShowCreateModal(true);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby='tableTitle'\n            size={dense ? 'small' : 'medium'}\n            aria-label='enhanced table'\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={0}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row: Data, index: Number) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.id)}\n                      role='checkbox'\n                      tabIndex={-1}\n                      key={row.id}\n                      selected={false}\n                    >\n                      <TableCell component='th' id={labelId} scope='row' padding='none'>\n                        {row.name}\n                      </TableCell>\n                      <TableCell>{row.comment}</TableCell>\n                      <TableCell><partials.renderImage url={row.imageUrl} height={100} /></TableCell>\n                      <TableCell>\n                        {row.yumFactor}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component='div'\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label='Dense padding'\n      />\n      <Button \n        variant=\"contained\" \n        color=\"primary\"\n        onClick={handleCreate}\n      >\n        Create\n      </Button>\n    </div>\n  );\n}\n","import HomePage from './HomePage';\n\nexport default HomePage;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport HomePage from \"./components/HomePage\";\n\nimport './index.css';\n\nconst App = () => (\n    <div id='app'>\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" exact component={HomePage} />\n            </Switch>\n        </BrowserRouter>\n    </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}