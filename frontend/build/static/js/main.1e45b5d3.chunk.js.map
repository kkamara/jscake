{"version":3,"sources":["constants.ts","components/Loader.tsx","components/HomePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API","Loader","color","loading","override","css","size","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","createStyles","root","paddingLeft","spacing","paddingRight","highlight","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","HomePage","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","setLoading","rows","setRows","getData","axios","get","res","status","data","Error","useEffect","Helmet","CssBaseline","Container","maxWidth","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","target","newSelecteds","n","name","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","comment","src","imageUrl","yumFactor","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","FormControlLabel","control","Switch","App","path","exact","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e45b5d3.chunk.js","sourcesContent":["\nconst API_VERSION = `v1`;\n\n// export const API = `/api/${API_VERSION}/`;\nexport const API = `http://localhost:3000/api/${API_VERSION}/`;\n","import React from \"react\";\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\n\ntype Props = {\n    color?: string;\n    loading?: boolean;\n    override?: string;\n}\n\nconst Loader = ({ \n    color, \n    loading, \n    override \n}: Props) => \n    <PacmanLoader \n        color={color || \"#42f5ef\"} \n        loading={loading} \n        css={override} \n        size={150} \n    />;\n\nexport default Loader;\n","import React, { Fragment } from 'react';\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { Helmet } from 'react-helmet';\n\nimport { API } from '../constants';\nimport Loader from './Loader';\n\ninterface Data {\n    id: number;\n    name: string;\n    comment: string;\n    imageUrl: string;\n    yumFactor: number;\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n  disablePadding: boolean;\n  id: keyof Data;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'comment', numeric: true, disablePadding: false, label: 'Comment' },\n  { id: 'imageUrl', numeric: false, disablePadding: false, label: 'Photo' },\n  { id: 'yumFactor', numeric: true, disablePadding: false, label: 'Yum Factor' },\n];\n\ninterface EnhancedTableProps {\n  classes: ReturnType<typeof useStyles>;\n  numSelected: number;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding='checkbox'>\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useToolbarStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1),\n    },\n    highlight:\n      theme.palette.type === 'light'\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n          }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n          },\n    title: {\n      flex: '1 1 100%',\n    },\n  }),\n);\n\ninterface EnhancedTableToolbarProps {\n  numSelected: number;\n}\n\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color='inherit' variant='subtitle1' component='div'>\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant='h6' id='tableTitle' component='div'>\n          Cakes\n        </Typography>\n      )}\n      {numSelected > 0 ? (\n        <Tooltip title='Delete'>\n          <IconButton aria-label='delete'>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title='Filter list'>\n          <IconButton aria-label='filter list'>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n  }),\n);\n\nexport default function HomePage() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Data>('name');\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [loading, setLoading] = React.useState(true);\n  const [rows, setRows] = React.useState<Data[]>([]);\n\n  const getData = async () => {\n      const res = await axios.get(`${API}cake/list`);\n      if (200 === res.status) {\n        setLoading(false);\n        setRows(res.data.data);\n      } else {\n        throw new Error(\"Something went wrong\");\n      }\n  };\n\n  React.useEffect(() => {\n      getData();\n  }, []);\n\n  if (loading === true) {\n    return (\n      <Fragment>\n          <Helmet>\n              <title>JS Cake 🎂</title>\n          </Helmet>\n          <CssBaseline />\n          <Container maxWidth='xs'>\n              <Loader />\n          </Container>\n      </Fragment>\n    );\n  }\n\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Data) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby='tableTitle'\n            size={dense ? 'small' : 'medium'}\n            aria-label='enhanced table'\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role='checkbox'\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding='checkbox'>\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component='th' id={labelId} scope='row' padding='none'>\n                        {row.name}\n                      </TableCell>\n                      <TableCell align='right'>{row.comment}</TableCell>\n                      <TableCell align='right'><img src={row.imageUrl} height={100} /></TableCell>\n                      <TableCell align='right'>{row.yumFactor}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component='div'\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label='Dense padding'\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Redirect, Route } from \"react-router-dom\";\n\nimport HomePage from \"./components/HomePage\";\n\nimport './index.css';\n\nconst App = () => (\n    <div id='app'>\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" exact component={HomePage} />\n                {/* <Route path=\"/404\" exact component={Page404} /> */}\n                <Redirect to=\"/404\" />\n            </Switch>\n        </BrowserRouter>\n    </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}